#summary 如何使用 Simple Registration 扩展传递参数。

= Simple Registration 教程 =

该使用范例几乎和 [AttributeExchangeHowTo_zh_CN Attribute Exchange] 一样。

Attribute Exchange可以传递任意类型的属性。要了解更多，请参考 [http://openid.net/specs/openid-attribute-exchange-1_0-04.html OpenID Attribute Exchange 1.0 规范] 和 [http://openid.net/specs/openid-attribute-types-1_0-02.html OpenID Attribute Types]。
 
== 依赖方发送 SRegRequest ==

{{{
SRegRequest sregReq = SRegRequest.createFetchRequest();

sregReq.addAttribute("fullname", true);
sregReq.addAttribute("nickname", true);
sregReq.addAttribute("email", true);

AuthRequest req = _consumerManager.authenticate(discovered, return_to);
req.addExtension(sregReq);
}}}

== OpenID 提供方接受 SRegRequest ==
{{{
if (authReq.hasExtension(SRegMessage.OPENID_NS_SREG))
{
    MessageExtension ext = authReq.getExtension(SRegMessage.OPENID_NS_SREG)

    if (ext instanceof SRegRequest)
    {
        SRegRequest sregReq = (SRegRequest) ext;
        List required = sregReq.getAttributes(true);
        List optional = sregReq.getAttributes(false);
        // prompt the user
    }
}
}}}

== OpenID 提供方发送 SRegResponse ==
{{{
    // data released by the user
    Map userData = new HashMap();
    //userData.put("email", "user@example.com");

    SRegResponse sregResp = SRegResponse.createSRegResponse(sregReq, userData);

    // (alternatively) manually add attribute values
    sregResp.addAttribute("email", "user@example.com");

    authSuccess.addExtension(sregResp);
}}}

== 依赖方接受 SRegResponse ==
{{{
if (authSuccess.hasExtension(SRegMessage.OPENID_NS_SREG))
{
    MessageExtension ext = authSuccess.getExtension(SRegMessage.OPENID_NS_SREG);

    if (ext instanceof SRegResponse)
    {
        SRegResponse sregResp = (SRegResponse) ext;
        
        String fullName = sregResp.getAttributeValue("fullname");
        String nickName = sregResp.getAttributeValue("nickname");
        String email = sregResp.getAttributeValues("email");
    }
}
}}}